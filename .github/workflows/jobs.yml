name: Docker

on:
  push:
    branches:
      - main
      - update-metrics

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 15

      - name: Grant execute permission for image manager's gradlew
        run: chmod +x gradlew
        working-directory: ./imagemanager

      - name: Test image manager with Gradle
        run: ./gradlew test
        working-directory: ./imagemanager

      - name: Grant execute permission for load balancer's gradlew
        run: chmod +x gradlew
        working-directory: ./loadbalancer

      - name: Test load balancer with Gradle
        run: ./gradlew test
        working-directory: ./loadbalancer


  push:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.DOC_TOKEN }}

      - name: Build and push imagemanager
        id: docker_build_imagemanager
        run: |
          docker build -f imagemanager/Dockerfile -t imagemanager imagemanager
          docker tag imagemanager orgmanager/imagemanager:latest
          docker push orgmanager/imagemanager:latest

      - name: Build and push loadbalancer
        id: docker_build_loadbalancer
        run: |
          docker build -f loadbalancer/Dockerfile -t loadbalancer loadbalancer
          docker tag loadbalancer orgmanager/loadbalancer:latest
          docker push orgmanager/loadbalancer:latest

  deploy:
    needs: push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Generate prometheus config
        run: |
          sed -e "s/GRAFANA_USERNAME/${{ secrets.GRAFANA_USERNAME }}/;s/GRAFANA_PASSWORD/${{ secrets.GRAFANA_PASSWORD }}/" \
          prometheus/prod-prometheus.yml > prometheus.yml

      - name: Scp to loadbalancer
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.DEPLOY_LOADBALANCER_HOST }}
          username: ubuntu
          port: 22
          key: ${{ secrets.DOCKER_PRIVATE_KEY}}
          source: "prometheus.yml,loadbalancer/prod-docker-compose.yml,scripts/loadbalancer/*,router/*"
          target: "deployment"

      - name: Scp to imagemanager-node-1
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.DEPLOY_IMAGEMANAGER_1_HOST }}
          username: ubuntu
          port: 22
          key: ${{ secrets.DOCKER_PRIVATE_KEY}}
          source: "imagemanager/prod-docker-compose.yml,scripts/imagemanager/*"
          target: "deployment"

      - name: Scp to imagemanager-node-2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.DEPLOY_IMAGEMANAGER_2_HOST }}
          username: ubuntu
          port: 22
          key: ${{ secrets.DOCKER_PRIVATE_KEY}}
          source: "imagemanager/prod-docker-compose.yml,scripts/imagemanager/*"
          target: "deployment"

      - name: Start docker-compose for loadbalancer
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEPLOY_LOADBALANCER_HOST }}
          username: ubuntu
          key: ${{ secrets.DOCKER_PRIVATE_KEY }}
          port: 22
          script: |
            cd deployment
            mv scripts/loadbalancer/* scripts/
            rm -r scripts/loadbalancer
            mv loadbalancer/prod-docker-compose.yml ./
            rm -r loadbalancer
            chmod +x scripts/*
            ./scripts/deploy.sh

      - name: Start docker-compose for imagemanager-node-1
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEPLOY_IMAGEMANAGER_1_HOST }}
          username: ubuntu
          key: ${{ secrets.DOCKER_PRIVATE_KEY }}
          port: 22
          script: |
            cd deployment
            mv scripts/imagemanager/* scripts/
            rm -r scripts/imagemanager
            mv imagemanager/prod-docker-compose.yml ./
            rm -r imagemanager
            chmod +x scripts/*
            ./scripts/deploy.sh

      - name: Start docker-compose for imagemanager-node-2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEPLOY_IMAGEMANAGER_2_HOST }}
          username: ubuntu
          key: ${{ secrets.DOCKER_PRIVATE_KEY }}
          port: 22
          script: |
            cd deployment
            mv scripts/imagemanager/* scripts/
            rm -r scripts/imagemanager
            mv imagemanager/prod-docker-compose.yml ./
            rm -r imagemanager
            chmod +x scripts/*
            ./scripts/deploy.sh