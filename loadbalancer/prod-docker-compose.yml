version: "3.8"

volumes:
  app_data: {}

networks:
  grafana:

services:
  nginx:
    image: nginx:1.19-alpine
    restart: unless-stopped
    network_mode: host
    volumes:
      - ./nginx_certs:/data/nginx/certs
      - ./router:/etc/nginx/conf.d

  prometheus:
    image: prom/prometheus:v2.21.0
    volumes:
      - app_data:/prometheus
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--storage.tsdb.retention.time=7d"
      - "--storage.tsdb.retention.size=1GB"
    ports:
      - 9090:9090
    networks:
      - grafana

  node_exporter:
    image: quay.io/prometheus/node-exporter:latest
    container_name: node_exporter
    command:
      - '--path.rootfs=/host'
    pid: host
    restart: unless-stopped
    volumes:
      - '/:/host:ro,rslave'
    networks:
      - grafana

  app:
    image: orgmanager/loadbalancer:latest
    restart: always
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - JAVA_ARG=-Xlog:gc=debug:file=/data/log/gc.log:time,uptime,level,tags:filecount=5,filesize=100m
    volumes:
      - ./log/:/data/log/
    ports:
      - 7000:8080
    networks:
      - grafana

