version: "3.8"

networks:
  io-net:

volumes:
  app_data: {}

services:
  node_exporter:
    image: quay.io/prometheus/node-exporter:latest
    container_name: node_exporter_imagemanager
    command:
      - '--path.rootfs=/host'
    pid: host
    restart: unless-stopped
    volumes:
      - '/:/host:ro,rslave'
    networks:
      - io-net

  imagemanager:
    build: ./imagemanager
    networks:
      - io-net
    healthcheck:
      test: curl --fail http://localhost:8080/health || exit 1
      interval: 10s
      timeout: 10s
      start_period: 10s
      retries: 3
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - CACHE_DIR=/data/cache
      - ORIGIN=http://origin:5000/
      - JAVA_ARG=-Xlog:gc=debug:file=/data/log/gc.log:time,uptime,level,tags:filecount=5,filesize=100m
      - LOG_REQUESTS=false
      - ORIGIN_ROUTES=http://origin
      - ROUTE_LIMITS=5
      # 12GB
      - CACHE_STORAGE_LIMIT=12000000000
      # 90%
      - CACHE_STORAGE_LIMIT_ALERT=90
    volumes:
      - ./cache/:/data/cache/
      - ./log/:/data/log/
    restart: always
    ports:
      - 8080:8080
      - 1098:1098
        
  loadbalancer:
    build: ./loadbalancer
    networks:
      - io-net
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - IMAGE_MANAGER_URLS=http://imagemanager:8080
      - JAVA_ARG=-Xlog:gc=debug:file=/data/log/gc.log:time,uptime,level,tags:filecount=5,filesize=100m
    restart: always
    volumes:
      - ./log/:/data/log/
    ports:
      - 7000:7000

  origin:
    build: ./origin_server
    networks:
      - io-net
    ports:
      - 5000:5000
    environment:
      - TOTAL_IMAGES=10
      - MOUNT_DIR=/data/images/
      - FLASK_APP=main.py
    volumes:
      - ./images/:/data/images/
